
#
# Raspberry Pi 3
#
# BCM2837 4-core ARM® Cortex®-A53 LE (ARMv8-A)
#

################################################################################
# Basic system parameters.                                                     #
#                                                                              #
################################################################################

USE_APPLICATION := test-RaspberryPi3

################################################################################
# CPU.                                                                         #
#                                                                              #
################################################################################

CPU       := AArch64
CPU_MODEL := Cortex-A53

################################################################################
# Build system parameters.                                                     #
#                                                                              #
################################################################################

GCC_SWITCHES_PLATFORM     := -mcpu=cortex-a53 -mabi=lp64 -mstrict-align -mno-outline-atomics
#GCC_SWITCHES_STARTUP      := -DSTARTUP_EL1
LD_SWITCHES_PLATFORM      := --undefined=el_table --no-warn-rwx-segments
OBJDUMP_SWITCHES_PLATFORM :=
OBJCOPY_SWITCHES_PLATFORM := -O binary --gap-fill=0x00
POSTBUILD_ROMFILE         := Y

CONFIGURE_FILES_PLATFORM := configure.ads configure.h
LOWLEVEL_FILES_PLATFORM  := startup.S llkernel.S

################################################################################
# User parameters.                                                             #
#                                                                              #
################################################################################

# parameters for createbootdevice.sh (if used)
#export USDCARD_UUID       := 3FFC-F14C
#export USDCARD_MOUNTPOINT := /mnt/hd

################################################################################
# Run/debug interface.                                                         #
#                                                                              #
################################################################################

SESSION_START_COMMAND := "$(PYTHON)" "$(SWEETADA_PATH)"/$(SHARE_DIRECTORY)/openocd.py \
                           -p "/opt/OpenOCD"                                          \
                           -c "$(SWEETADA_PATH)"/$(PLATFORM_DIRECTORY)/openocd.cfg    \
                           -server -w
SESSION_END_COMMAND   := "$(PYTHON)" "$(SWEETADA_PATH)"/$(SHARE_DIRECTORY)/openocd.py \
                           -shutdown
RUN_COMMAND           := "$(PYTHON)" "$(SWEETADA_PATH)"/$(SHARE_DIRECTORY)/openocd.py \
                           -f "$(SWEETADA_PATH)"/$(KERNEL_OUTFILE)                    \
                           -e $(ELFTOOL) -s _start -command "halt"
DEBUG_COMMAND         := $(RUN_COMMAND) -debug &&                      \
                         $${GDB}                                       \
                           -ex "target extended-remote localhost:3333" \
                           -ex "set language asm"                      \
                           -ex "set \$$pc=_start"                      \
                           $(KERNEL_OUTFILE)

